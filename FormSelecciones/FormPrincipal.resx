<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctArgentina.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANwAAACTCAYAAADlVHc4AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAB3RJTUUH4wEUFDY4BC4IswAACJRJREFU
        eF7t3XdwFGUYx3H/tff+h6NjG3UcdUYQG9YZB0WFsfc6dseO3bGMY8M2SsQA0lQ6ShSQDkEEFCx0pCio
        gIHQQ1DgNc/6nmZzz+3tXZIn2eX7m/n8wWX33U3I7y67t/veDju1+GDpji1LKgE0LunaDsE/WpQ4AI2s
        pmsUDrBC4QBDFA4wROEAQxQOMEThAEMUDjBE4QBDFA4wROEAQxQOMEThAEMUDjBE4QBDFA4wROEAQxQO
        METhAEMUDjBE4QBDFA4wROEAQxQOMEThAEMUDjBE4QBDFA4wROEAQxQOMEThAEMUDjBE4QBDFA4wROEA
        QxQOMEThAEMUDjBE4QBDFA4wROEAQxQOMEThAEMUDjBE4QBDFA4wROEAQxQOMEThAEMUDjCU9sLtdUap
        u/aJEaaOafdxaB+ufGy4upzmzJsHhtat6/CLeqrrNaYDz+2m7os4oOZr2jq5XN3hK7dTS32suk644lPX
        /qGh7oyan8nOp3ygLpM4aS+c/IJaR35Rau/D+qq//Ffyp8/w+aF165JfWstUrq12e5z+obov4qE3yv2S
        8XP2bYPVsTIOa9PTjZ6y1E3+abnr1HeG+2LCYjdncaU75/bo9RKBwjVspsxYnrUPSS6c/MJr+5ExdeYK
        v2T8dO4/Ux1L7FlT7tmLKt0jHSe6p9+bHLjx6ZHu3JqyLavY6E66so+6XmJQuIbNfa+Mz9qHJBfu1BsG
        qPshjm3/sdu2zS9YQORVc/fTOqtjys9v2MRf3H5ndXErVlW5C+8tc10GzXIvdJ7qOrz9tRs4aoG6XmJQ
        uIbL5r+2uoPP/yhrH5JauNkLV6n7kPFS6bd+ycJz2cPD1DH7j1jgHn3z66BwFZVV7ronR7hBoxe6Z9+f
        7E6+pl/wmLZeYlC4hsuAkfqzb1IL98Q7k9R9yJj/62q/ZOHJ9bOSVzA5LswUrnTgLNd9yJzgpMlJV/V1
        K1dvUtdLDArXcLn0gS/VfUhi4f7estUd2qaHug+i9S2D/JLFZdPmLcEZzrrjStk+H7soKNyvy9YFJ2ym
        z/kz2JcHXy93Q8YtylonUShcw0SON3ZtpR+XJLFwchylbT+jpN8Mv2TxufPFsVnj7tO61C1Yuib42v2v
        TggeO/2mge6el8e7Pyo2uJbX9c9aJ1EoXDhyQC/PqIV6puYYQ9u+2FD1tx89fxq6cEuWrVf3Nx95/0vb
        vpAnFnmCqW/GffebOv7Rl/QOzn6O/GaJe6XbNPfJ0HlBCS+6t0xdPlEoXDifDov+hS9GUxbugdfK1XHq
        o92DQ/3o9cvWrdvcEW17qduQN8dPu3GAu+mZUa7NPUMi3wtMFAoXDoXLr+9XP/vRc0feqI4TeZ9N20Zq
        UbhwKFw0OcaK8/3c/Owot3zlRv+v3JE3ubXtpBaFC4fCRbv9+TF+5NzZUvOnorwf2aNsjn8kOi2u7adu
        K5UoXDgULtqoKUv9yLkj10DKsld1GO4fic6bvb7P2k5qUbhwKFxu8l6YvHrli1yGJcvv27qLq968xT+a
        O3K6f5e03A2QD4ULpzEKt3FTOgr3+DuT/KjRqX395cjJS/yj0ZEzkbW3lVoULhx530ouL4oj35X0GU1Z
        uB/mVqj7rnm440R1mxkyVr7IiZLa97vFvX1Hjvdqbyu1KFzxeaPHdHWbdTVl4QqJHHNp2xQnXtHHLxWd
        nmVzQ+sddXFv/5XorN2w2e19Zmlo3VSicMWn7o2muSShcHLlyG6n6pemiVc/muaXjI5c3V933VkLVvmv
        Ruf6p7LXTR0KV1wmTPtd3Z4mCYWLerWWPxEX/77OL5k7ckLloPOyL0h+vft0v0R0hpZHX7+ZChSuuNz6
        3Gh1e5rmXji5ifT4yz5RtyfOv+Mzv2R0yqf/oa4vUyPEidyhcMgF3dUxUoPCFZ616ws73mjuhRuf59W6
        6+BZfsno5LqAW+5l+7My3sXOcguONkZqULjCEzUnh6a5F04uw9K2JWQqhFVrNvkloyN3ZGtjiN5fzvNL
        RUebEyZVKFzhaXV9YfdkVVU338KtWVcd+WotU/zFiUzwEzX9XSH7HfXnbeJRuHB+nFfx32xRmmL+5GnK
        wpWNX6x+HxlSKG07GYPHLPQjRafb4Nnq+hn7n901mPMlTmSuFG2MVKBw4TTGlSZNWbj6XGkiUyDIVAhx
        8lynKcEVJlHkySxO5GbTuJPFJg6FC4fC/e/ul8f5Uewjc6Zo+5R4FC4cCvc/ea+xqSJzpmj7lHgULhwK
        968jL+4VTIHQVJEzo7kmi000ChcOhfuXvKfW1ImayCixKFw4jVG4uCceJM2lcDNjXv/YmJFZmLV9SzQK
        Fw6FKwnmfmwOkZ/b/ud0VfcxsShcOBSuxL3V+we/dv7IbTWr11UXRK6ZjJs7XsieLDbRKFw423vh5LrH
        31Zs8GtHR76vYu5hK2TW5jFT9cliE4vChbO9F04+HipuRkxaoo6RT9v7vvAj5I+cKZX/Q22cRKJw4Wzv
        hZM7tuMm35QMucjpfvlTNG6efPcbdZxEonDhbM+Fk08flVuP4ua49sVfZCyf+RY3P81fqY6RSGkvnHxe
        tHbgnovc+6WNUx8ysY62LU2+i4Avf2SYul4ud70U/6SDfEiiNoZGJhTSxohLPjNAGzeXuNNZNHtpLxzQ
        rFA4wBCFAwxROMAQhQMMUTjAEIUDDFE4wBCFAwxROMAQhQMMUTjAEIUDDFE4wBCFAwxROMAQhQMMUTjA
        EIUDDFE4wBCFAwxROMAQhQMMUTjAEIUDDFE4wBCFAwxROMAQhQMMUTjAEIUDDFE4wBCFAwxROMAQhQMM
        UTjAEIUDDFE4wBCFAwxROMAQhQMMUTjAEIUDDFE4wBCFAwxROMAQhQMMUTjAEIUDDFE4wBCFAwxROMAQ
        hQMMUTjAEIUDDFE4wBCFAwwFhWtRMrfGLwAaW8ncfwDwUb/vMb5FAQAAAABJRU5ErkJggg==
</value>
  </data>
</root>